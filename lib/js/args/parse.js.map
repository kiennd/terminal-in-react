{"version":3,"sources":["../../../src/js/args/parse.js"],"names":["argv","options","Object","assign","config","help","option","command","showHelp","raw","slice","minimist","version","checkVersion","parent","subCommand","_","helpTriggered","h","args","defined","isDefined","optionList","getOptions","shift","sub","runCommand"],"mappings":";;;;;;;;;;;;;;;;;;;oBAEe,UAAUA,IAAV,EAAgBC,OAAhB,EAAyB;AACtC;AACAC,WAAOC,MAAP,CAAc,KAAKC,MAAnB,EAA2BH,OAA3B;;AAEA,QAAI,KAAKG,MAAL,CAAYC,IAAhB,EAAsB;AACpB;AACA,WAAKC,MAAL,CAAY,MAAZ,EAAoB,0BAApB;AACA,WAAKC,OAAL,CAAa,MAAb,EAAqB,cAArB,EAAqC,KAAKC,QAA1C;AACD;;AAED;AACA,SAAKC,GAAL,GAAW,wBAAOT,KAAKU,KAAL,CAAW,CAAX,CAAP,EAAsB,KAAKN,MAAL,CAAYO,QAAlC,CAAX;;AAEA;AACA,QAAI,KAAKP,MAAL,CAAYQ,OAAhB,EAAyB;AACvB,WAAKC,YAAL,CAAkB,KAAKC,MAAvB;AACD;;AAED,QAAMC,aAAa,KAAKN,GAAL,CAASO,CAAT,CAAW,CAAX,CAAnB;AACA,QAAMC,gBAAgB,KAAKR,GAAL,CAASS,CAAT,IAAc,KAAKT,GAAL,CAASJ,IAA7C;;AAEA,QAAMc,OAAO,EAAb;AACA,QAAMC,UAAU,KAAKC,SAAL,CAAeN,UAAf,EAA2B,UAA3B,CAAhB;AACA,QAAMO,aAAa,KAAKC,UAAL,CAAgBH,OAAhB,CAAnB;;AAEAlB,WAAOC,MAAP,CAAcgB,IAAd,EAAoB,KAAKV,GAAzB;AACAU,SAAKH,CAAL,CAAOQ,KAAP;;AAEA;AACA,SAAKC,GAAL,GAAWN,KAAKH,CAAhB;;AAEA;AACA,QAAII,OAAJ,EAAa;AACX,WAAKM,UAAL,CAAgBN,OAAhB,EAAyBE,UAAzB;AACA,aAAO,EAAP;AACD;;AAED;AACA;AACA,QAAI,KAAKlB,MAAL,CAAYC,IAAZ,IAAoBY,aAAxB,EAAuC;AACrC,WAAKT,QAAL;AACD;;AAED;AACA,WAAOc,UAAP;AACD,G","file":"parse.js","sourcesContent":["import parser from 'minimist';\r\n\r\nexport default function (argv, options) {\r\n  // Override default option values\r\n  Object.assign(this.config, options);\r\n\r\n  if (this.config.help) {\r\n    // Register default options and commands\r\n    this.option('help', 'Output usage information');\r\n    this.command('help', 'Display help', this.showHelp);\r\n  }\r\n\r\n  // Parse arguments using minimist\r\n  this.raw = parser(argv.slice(1), this.config.minimist);\r\n\r\n  // If default version is allowed, check for it\r\n  if (this.config.version) {\r\n    this.checkVersion(this.parent);\r\n  }\r\n\r\n  const subCommand = this.raw._[1];\r\n  const helpTriggered = this.raw.h || this.raw.help;\r\n\r\n  const args = {};\r\n  const defined = this.isDefined(subCommand, 'commands');\r\n  const optionList = this.getOptions(defined);\r\n\r\n  Object.assign(args, this.raw);\r\n  args._.shift();\r\n\r\n  // Export sub arguments of command\r\n  this.sub = args._;\r\n\r\n  // If sub command is defined, run it\r\n  if (defined) {\r\n    this.runCommand(defined, optionList);\r\n    return {};\r\n  }\r\n\r\n  // Show usage information if \"help\" or \"h\" option was used\r\n  // And respect the option related to it\r\n  if (this.config.help && helpTriggered) {\r\n    this.showHelp();\r\n  }\r\n\r\n  // Hand back list of options\r\n  return optionList;\r\n}\r\n"]}