{"version":3,"sources":["../../../../src/js/components/Bar/index.js"],"names":["Bar","handleClose","props","context","toggleShow","handleMinimise","toggleMinimize","handleMaximise","toggleMaximise","style","showActions","maximise","maxWidth","cursor","Component","displayName","propTypes","PropTypes","object","bool","func","defaultProps","contextTypes"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAIMA,G;;;;;;;;;;;;;;kLAwBJC,W,GAAc,YAAM;AAClB,YAAI,MAAKC,KAAL,CAAWD,WAAf,EAA4B;AAC1B,gBAAKC,KAAL,CAAWD,WAAX,CAAuB,MAAKE,OAAL,CAAaC,UAApC;AACD,SAFD,MAEO;AACL,gBAAKD,OAAL,CAAaC,UAAb;AACD;AACF,O,QAGDC,c,GAAiB,YAAM;AACrB,YAAI,MAAKH,KAAL,CAAWG,cAAf,EAA+B;AAC7B,gBAAKH,KAAL,CAAWG,cAAX,CAA0B,MAAKF,OAAL,CAAaG,cAAvC;AACD,SAFD,MAEO;AACL,gBAAKH,OAAL,CAAaG,cAAb;AACD;AACF,O,QAGDC,c,GAAiB,YAAM;AACrB,YAAI,MAAKL,KAAL,CAAWK,cAAf,EAA+B;AAC7B,gBAAKL,KAAL,CAAWK,cAAX,CAA0B,MAAKJ,OAAL,CAAaK,cAAvC;AACD,SAFD,MAEO;AACL,gBAAKL,OAAL,CAAaK,cAAb;AACD;AACF,O;;;;;+BAEQ;AAAA,qBACwB,KAAKN,KAD7B;AAAA,YACCO,KADD,UACCA,KADD;AAAA,YACQC,WADR,UACQA,WADR;;AAEP,eACE;AAAC,wCAAD;AAAA;AACE,gCACKD,KADL,EAEM,KAAKN,OAAL,CAAaQ,QAAb,GAAwB,EAAEC,UAAU,MAAZ,EAAxB,GAA+C,EAFrD;AADF;AAMGF,yBACC;AAAA;AAAA,cAAK,QAAO,IAAZ,EAAiB,OAAM,KAAvB;AACE;AACE,kBAAG,IADL;AAEE,kBAAG,IAFL;AAGE,iBAAE,GAHJ;AAIE,oBAAK,KAJP;AAKE,qBAAO,EAAEG,QAAQ,SAAV,EALT;AAME,uBAAS,KAAKZ;AANhB,cADF;AASE;AACE,kBAAG,IADL;AAEE,kBAAG,IAFL;AAGE,iBAAE,GAHJ;AAIE,oBAAK,QAJP;AAKE,qBAAO,EAAEY,QAAQ,SAAV,EALT;AAME,uBAAS,KAAKR;AANhB,cATF;AAiBE;AACE,kBAAG,IADL;AAEE,kBAAG,IAFL;AAGE,iBAAE,GAHJ;AAIE,oBAAK,OAJP;AAKE,qBAAO,EAAEQ,QAAQ,SAAV,EALT;AAME,uBAAS,KAAKN;AANhB;AAjBF;AAPJ,SADF;AAqCD;;;;IAzFeO,gB,UACTC,W,GAAc,K,SAEdC,S,GAAY;AACjBP,WAAOQ,oBAAUC,MADA,EACQ;AACzBR,iBAAaO,oBAAUE,IAFN;AAGjBd,oBAAgBY,oBAAUG,IAHT;AAIjBb,oBAAgBU,oBAAUG,IAJT;AAKjBnB,iBAAagB,oBAAUG;AALN,G,SAQZC,Y,GAAe;AACpBZ,WAAO,EADa;AAEpBC,iBAAa;AAFO,G,SAKfY,Y,GAAe;AACpBX,cAAUM,oBAAUE,IADA;AAEpBf,gBAAYa,oBAAUG,IAFF;AAGpBd,oBAAgBW,oBAAUG,IAHN;AAIpBZ,oBAAgBS,oBAAUG;AAJN,G;oBA4ETpB,G","file":"index.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TerminalTopBar } from './styled-elements';\r\n\r\nclass Bar extends Component {\r\n  static displayName = 'Bar';\r\n\r\n  static propTypes = {\r\n    style: PropTypes.object, // eslint-disable-line\r\n    showActions: PropTypes.bool,\r\n    handleMinimise: PropTypes.func,\r\n    handleMaximise: PropTypes.func,\r\n    handleClose: PropTypes.func,\r\n  };\r\n\r\n  static defaultProps = {\r\n    style: {},\r\n    showActions: true,\r\n  };\r\n\r\n  static contextTypes = {\r\n    maximise: PropTypes.bool,\r\n    toggleShow: PropTypes.func,\r\n    toggleMinimize: PropTypes.func,\r\n    toggleMaximise: PropTypes.func,\r\n  };\r\n\r\n  // Close the window\r\n  handleClose = () => {\r\n    if (this.props.handleClose) {\r\n      this.props.handleClose(this.context.toggleShow);\r\n    } else {\r\n      this.context.toggleShow();\r\n    }\r\n  };\r\n\r\n  // Minimise the window\r\n  handleMinimise = () => {\r\n    if (this.props.handleMinimise) {\r\n      this.props.handleMinimise(this.context.toggleMinimize);\r\n    } else {\r\n      this.context.toggleMinimize();\r\n    }\r\n  };\r\n\r\n  // Maximise the window\r\n  handleMaximise = () => {\r\n    if (this.props.handleMaximise) {\r\n      this.props.handleMaximise(this.context.toggleMaximise);\r\n    } else {\r\n      this.context.toggleMaximise();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { style, showActions } = this.props;\r\n    return (\r\n      <TerminalTopBar\r\n        style={{\r\n          ...style,\r\n          ...(this.context.maximise ? { maxWidth: '100%' } : {}),\r\n        }}\r\n      >\r\n        {showActions && (\r\n          <svg height=\"20\" width=\"100\">\r\n            <circle\r\n              cx=\"24\"\r\n              cy=\"14\"\r\n              r=\"5\"\r\n              fill=\"red\"\r\n              style={{ cursor: 'pointer' }}\r\n              onClick={this.handleClose}\r\n            />\r\n            <circle\r\n              cx=\"44\"\r\n              cy=\"14\"\r\n              r=\"5\"\r\n              fill=\"orange\"\r\n              style={{ cursor: 'pointer' }}\r\n              onClick={this.handleMinimise}\r\n            />\r\n            <circle\r\n              cx=\"64\"\r\n              cy=\"14\"\r\n              r=\"5\"\r\n              fill=\"green\"\r\n              style={{ cursor: 'pointer' }}\r\n              onClick={this.handleMaximise}\r\n            />\r\n          </svg>\r\n        )}\r\n      </TerminalTopBar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Bar;\r\n"]}