{"version":3,"sources":["../../../src/js/components/types.js"],"names":["commandsPropType","PropTypes","objectOf","oneOfType","func","shape","options","arrayOf","name","string","description","defaultValue","any","method","descriptionsPropType","bool","TerminalPropTypes","startState","oneOf","showActions","hideTopBar","allowTabs","msg","closedTitle","closedMessage","color","style","object","prompt","barColor","outputColor","backgroundColor","commands","descriptions","watchConsoleLogging","commandPassThrough","promptSymbol","plugins","class","config","shortcuts","actionHandlers","handleClose","handleMinimise","handleMaximise","afterChange","commandWasRun","TerminalContextTypes","barShowing","tabsShowing","activeTab","instances","array","show","minimise","maximise","closeWindow","openWindow","minimiseWindow","unminimiseWindow","maximiseWindow","unmaximiseWindow","toggleShow","toggleMaximise","toggleMinimize","TerminalDefaultProps"],"mappings":"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","file":"types.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nexport const commandsPropType = PropTypes.objectOf(PropTypes.oneOfType([\r\n  PropTypes.func,\r\n  PropTypes.shape({\r\n    options: PropTypes.arrayOf(PropTypes.shape({\r\n      name: PropTypes.string,\r\n      description: PropTypes.string,\r\n      defaultValue: PropTypes.any,\r\n    })),\r\n    method: PropTypes.func,\r\n  }),\r\n]));\r\n\r\nexport const descriptionsPropType = PropTypes.objectOf(PropTypes.oneOfType([\r\n  PropTypes.string,\r\n  PropTypes.bool,\r\n]));\r\n\r\nexport const TerminalPropTypes = {\r\n  startState: PropTypes.oneOf(['minimised', 'maximised', 'open', 'closed']),\r\n  showActions: PropTypes.bool,\r\n  hideTopBar: PropTypes.bool,\r\n  allowTabs: PropTypes.bool,\r\n  msg: PropTypes.string,\r\n  closedTitle: PropTypes.string,\r\n  closedMessage: PropTypes.string,\r\n  color: PropTypes.string,\r\n  style: PropTypes.object, // eslint-disable-line\r\n  prompt: PropTypes.string,\r\n  barColor: PropTypes.string,\r\n  outputColor: PropTypes.string,\r\n  backgroundColor: PropTypes.string,\r\n  commands: commandsPropType,\r\n  descriptions: descriptionsPropType,\r\n  watchConsoleLogging: PropTypes.bool,\r\n  commandPassThrough: PropTypes.oneOfType([\r\n    PropTypes.func,\r\n    PropTypes.bool,\r\n  ]),\r\n  promptSymbol: PropTypes.string,\r\n  plugins: PropTypes.arrayOf(PropTypes.oneOfType([\r\n    PropTypes.func,\r\n    PropTypes.shape({\r\n      class: PropTypes.func,\r\n      config: PropTypes.object,\r\n    }),\r\n  ])),\r\n  shortcuts: PropTypes.objectOf(PropTypes.objectOf(PropTypes.string)),\r\n  actionHandlers: PropTypes.shape({\r\n    handleClose: PropTypes.func,\r\n    handleMinimise: PropTypes.func,\r\n    handleMaximise: PropTypes.func,\r\n  }),\r\n  afterChange: PropTypes.func,\r\n  commandWasRun: PropTypes.func,\r\n};\r\n\r\nexport const TerminalContextTypes = {\r\n  barShowing: PropTypes.bool,\r\n  tabsShowing: PropTypes.bool,\r\n  activeTab: PropTypes.string,\r\n  instances: PropTypes.array,\r\n  show: PropTypes.bool,\r\n  minimise: PropTypes.bool,\r\n  maximise: PropTypes.bool,\r\n  closeWindow: PropTypes.func,\r\n  openWindow: PropTypes.func,\r\n  minimiseWindow: PropTypes.func,\r\n  unminimiseWindow: PropTypes.func,\r\n  maximiseWindow: PropTypes.func,\r\n  unmaximiseWindow: PropTypes.func,\r\n  toggleShow: PropTypes.func,\r\n  toggleMaximise: PropTypes.func,\r\n  toggleMinimize: PropTypes.func,\r\n};\r\n\r\nexport const TerminalDefaultProps = {\r\n  startState: 'open',\r\n  hideTopBar: false,\r\n  allowTabs: true,\r\n  showActions: true,\r\n  msg: '',\r\n  closedTitle: 'OOPS! You closed the window.',\r\n  closedMessage: 'Click on the icon to reopen.',\r\n  color: 'green',\r\n  style: {},\r\n  prompt: 'green',\r\n  barColor: 'black',\r\n  backgroundColor: 'black',\r\n  commands: {},\r\n  descriptions: {},\r\n  watchConsoleLogging: false,\r\n  commandPassThrough: false,\r\n  promptSymbol: '>',\r\n  plugins: [],\r\n  shortcuts: {},\r\n};\r\n"]}