{"version":3,"sources":["../../../../src/js/components/Content/index.js"],"names":["Content","state","summary","promptPrefix","prompt","history","historyCounter","input","keyInputs","canScroll","controller","componentWillMount","data","context","instances","find","i","index","props","id","oldData","setState","componentDidMount","focusInput","unregister","register","Object","keys","length","handleChange","target","value","key","dontShowCommand","componentDidUpdate","inputWrapper","scrollIntoView","setScrollPosition","pos","setTimeout","contentWrapper","scrollTop","com","focus","e","handleKeyPress","handlerKeyPress","handleOuterKeypress","actionKeys","unprintableKeys","indexOf","document","activeElement","char","maximise","activeTab","barShowing","tabsShowing","output","map","content","Array","isArray","cont","marginRight","toSubtract","maxWidth","maxHeight","overflowY","ctw","elm","Component","displayName","propTypes","PropTypes","string","object","func","isRequired","defaultProps","contextTypes","bool","array"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport whatkey, { unprintableKeys } from 'whatkey';\r\nimport {\r\n  ContainerMain, ContainerContent, Holder,\r\n  Input, InputArea, MainInput,\r\n  OutputLine, PreOutputLine, Prompt,\r\n} from './styled-elements';\r\n\r\nclass Content extends Component {\r\n  static displayName = 'Content';\r\n\r\n  static propTypes = {\r\n    id: PropTypes.string,\r\n    oldData: PropTypes.object, // eslint-disable-line\r\n    prompt: PropTypes.string,\r\n    register: PropTypes.func,\r\n    handleChange: PropTypes.func,\r\n    handlerKeyPress: PropTypes.func.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    prompt: '>',\r\n    oldData: {},\r\n  };\r\n\r\n  static contextTypes = {\r\n    maximise: PropTypes.bool,\r\n    instances: PropTypes.array,\r\n    activeTab: PropTypes.string,\r\n    barShowing: PropTypes.bool,\r\n    tabsShowing: PropTypes.bool,\r\n  };\r\n\r\n  state = {\r\n    summary: [],\r\n    promptPrefix: '',\r\n    prompt: '>',\r\n    history: [],\r\n    historyCounter: 0,\r\n    input: [],\r\n    keyInputs: [],\r\n    canScroll: true,\r\n    controller: null,\r\n  };\r\n\r\n  componentWillMount = () => {\r\n    const data = this.context.instances.find(i => i.index === this.props.id);\r\n    let state = { prompt: this.props.prompt };\r\n    if (data) {\r\n      state = { ...state, ...data.oldData };\r\n    }\r\n    this.setState(state);\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.focusInput();\r\n    const data = this.context.instances.find(i => i.index === this.props.id);\r\n    this.unregister = this.props.register(this);\r\n    if (!data || Object.keys(data.oldData).length === 0) {\r\n      this.handleChange({ target: { value: 'show' }, key: 'Enter', dontShowCommand: true });\r\n    }\r\n  };\r\n\r\n  // Adjust scrolling\r\n  componentDidUpdate = () => {\r\n    if (this.inputWrapper !== null) {\r\n      this.inputWrapper.scrollIntoView(false);\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.unregister(this.state);\r\n  }\r\n\r\n  setScrollPosition = (pos) => {\r\n    setTimeout(() => {\r\n      if (this.contentWrapper !== null) {\r\n        this.contentWrapper.scrollTop = pos;\r\n      }\r\n    }, 50);\r\n  };\r\n\r\n  focusInput = () => {\r\n    if (this.com !== null) {\r\n      this.com.focus();\r\n    }\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.props.handleChange(this, e);\r\n  }\r\n\r\n  handleKeyPress = (e) => {\r\n    this.props.handlerKeyPress(this, e, this.com);\r\n  }\r\n\r\n  handleOuterKeypress = (e) => {\r\n    const { key } = whatkey(e);\r\n    const actionKeys = ['up', 'down', 'left', 'right', 'enter'];\r\n    if (unprintableKeys.indexOf(key) < 0) {\r\n      if (document.activeElement !== this.com) {\r\n        this.com.focus();\r\n        this.com.value += whatkey(e).char;\r\n      }\r\n    } else if (actionKeys.indexOf(key) > -1) {\r\n      this.com.focus();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props;\r\n    const {\r\n      maximise, activeTab, barShowing, tabsShowing,\r\n    } = this.context;\r\n\r\n    if (id !== activeTab) {\r\n      return null;\r\n    }\r\n\r\n    const output = this.state.summary.map((content, i) => {\r\n      if (typeof content === 'string' && content.length === 0) {\r\n        return <OutputLine key={i}>&nbsp;</OutputLine>;\r\n      }\r\n      return (\r\n        <PreOutputLine key={i}>\r\n          {\r\n            Array.isArray(content) ?\r\n            content.map((cont, key) => (\r\n              <span style={{ marginRight: 5 }} key={`inner-${key}`}>{cont}</span>\r\n            )) :\r\n            content\r\n          }\r\n        </PreOutputLine>\r\n      );\r\n    });\r\n\r\n    let toSubtract = 30;\r\n    if (!barShowing) {\r\n      toSubtract -= 30;\r\n    }\r\n    if (tabsShowing) {\r\n      toSubtract += 30;\r\n    }\r\n\r\n    return (\r\n      <ContainerMain\r\n        style={{\r\n          ...(maximise\r\n            ? { maxWidth: '100%', maxHeight: `calc(100% - ${toSubtract}px)` }\r\n            : {}),\r\n          ...(this.state.canScroll\r\n            ? { overflowY: 'auto' }\r\n            : { overflowY: 'hidden' }),\r\n        }}\r\n        tabIndex=\"0\"\r\n        onKeyUp={this.handleOuterKeypress}\r\n        innerRef={(ctw) => { this.contentWrapper = ctw; }}\r\n      >\r\n        <Holder>\r\n          <ContainerContent>\r\n            <InputArea>\r\n              {output}\r\n              <Input\r\n                innerRef={(elm) => { this.inputWrapper = elm; }}\r\n              >\r\n                <Prompt>\r\n                  {this.state.promptPrefix + this.state.prompt}\r\n                </Prompt>\r\n                <MainInput\r\n                  type=\"text\"\r\n                  tabIndex=\"-1\"\r\n                  innerRef={(com) => { this.com = com; }}\r\n                  onKeyPress={this.handleChange}\r\n                  onKeyDown={this.handleKeyPress}\r\n                />\r\n              </Input>\r\n            </InputArea>\r\n          </ContainerContent>\r\n        </Holder>\r\n      </ContainerMain>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Content;\r\n"]}