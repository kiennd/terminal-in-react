{"version":3,"sources":["../../../../src/js/components/Terminal/terminal-utils.js"],"names":["pluginMap","uuidv4","getShortcuts","modCommands","os","plugins","eachHandler","map","plugin","class","config","undefined","forEach","pluginObj","replace","c","r","Math","random","v","toString","shortcuts","obj","Object","keys","key","split","toLowerCase","osName","commands","newCommands","name","needsInstance","definition","method","parse","i","cmd","Command","options","e","Error","help","version"],"mappings":"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","file":"terminal-utils.js","sourcesContent":["import Command from '../../args/index';\r\nimport { getOs } from '../../utils';\r\n\r\nexport const os = getOs();\r\n\r\nexport function pluginMap(plugins, eachHandler) {\r\n  return plugins.map((plugin) => {\r\n    if (typeof plugin === 'function') {\r\n      plugin = {\r\n        class: plugin,\r\n        config: undefined,\r\n      };\r\n    }\r\n    return plugin;\r\n  }).forEach(pluginObj => eachHandler(pluginObj.class, pluginObj.config));\r\n}\r\n\r\nexport function uuidv4() {\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\r\n    const r = Math.random() * 16 | 0; // eslint-disable-line no-bitwise\r\n    const v = c === 'x' ? r : (r & 0x3 | 0x8); // eslint-disable-line\r\n    return v.toString(16);\r\n  });\r\n}\r\n\r\nexport function getShortcuts(shortcuts, obj) {\r\n  if (typeof obj === 'object') {\r\n    Object.keys(obj).forEach((key) => {\r\n      const split = key.toLowerCase().replace(/\\s/g, '').split(',');\r\n      split.forEach((osName) => {\r\n        if (osName === os) {\r\n          shortcuts = {\r\n            ...shortcuts,\r\n            ...obj[key],\r\n          };\r\n        }\r\n      });\r\n    });\r\n  }\r\n  return shortcuts;\r\n}\r\n\r\nexport function modCommands(commands) {\r\n  const newCommands = {};\r\n\r\n  Object.keys(commands).forEach((name) => {\r\n    let needsInstance = false;\r\n    const definition = commands[name];\r\n    let method = definition;\r\n    let parse = i => i;\r\n    if (typeof definition !== 'undefined') {\r\n      if (typeof definition === 'object') {\r\n        const cmd = new Command();\r\n        if (typeof definition.options !== 'undefined') {\r\n          try {\r\n            cmd.options(definition.options);\r\n          } catch (e) {\r\n            throw new Error('options for command wrong format');\r\n          }\r\n        }\r\n        parse = i =>\r\n          cmd.parse(i, {\r\n            name,\r\n            help: true,\r\n            version: false,\r\n          });\r\n        method = definition.method; // eslint-disable-line\r\n        needsInstance = definition.needsInstance || false;\r\n      }\r\n\r\n      newCommands[name] = {\r\n        parse,\r\n        method,\r\n        needsInstance,\r\n      };\r\n    }\r\n  });\r\n\r\n  return newCommands;\r\n}\r\n"]}