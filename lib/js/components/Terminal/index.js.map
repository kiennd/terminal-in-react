{"version":3,"sources":["../../../../src/js/components/Terminal/index.js"],"names":["compLogic","comp","a","b","parseInt","putCursorAtEnd","el","document","activeElement","focus","setSelectionRange","len","value","length","setTimeout","Terminal","props","componentWillMount","loadPlugins","assembleCommands","setDescriptions","setShortcuts","createTab","componentDidMount","watchConsoleLogging","force","allowTabs","promptSymbol","tabs","state","id","push","handleChange","handlerKeyPress","args","registerInstance","setState","activeTab","removeTab","index","splice","getAppContent","show","minimise","getNote","getBar","getContent","color","style","showActions","hideTopBar","actionHandlers","baseStyle","height","animation","fontFamily","fontSize","setActiveTab","closedTitle","toggleState","closedMessage","getPluginData","pluginData","name","setPluginData","data","descriptions","defaultDesciptions","plugins","plugin","shortcuts","defaultShortcuts","setPromptPrefix","instance","promptPrefix","controller","setPromptSymbol","prompt","setFalse","setTrue","setValueWithHistory","position","inputRef","history","historyCounter","checkVersion","ver","test","Error","clean","toLowerCase","replace","split","realSplit","version","checkBools","map","val","indexOf","instances","pluginInstances","pluginMethods","old","find","i","PluginClass","config","api","printLine","bind","removeLine","runCommand","setCanScroll","setScrollPosition","focusInput","getPluginMethod","takeControl","pluginTakeControl","releaseControl","pluginReleaseControl","getData","displayName","setData","os","updateApi","getPublicMethods","_getName","_getVersion","e","console","error","realIndex","insts","filter","newPrompt","newPromptPrefix","oldPrefix","oldPrompt","commands","defaultCommands","autocompleteValue","keysToCheck","Object","keys","key","ratings","stringSimilarity","findBestMatch","reduce","full","item","target","rating","clearScreen","summary","checkShortcuts","cuts","instanceData","values","forEach","keyInputs","modKey","options","cut","slice","shortcut","action","preventDefault","stopPropagation","editLine","line","_","join","input","saveToHistory","shiftKey","dontShowCommand","res","newHistory","historyProps","afterChange","onKeyPress","tabbed","contents","styles","marginRight","width","display","marginBottom","defaultData","method","canScroll","pos","inp","std","print","readStdOut","lineNumber","inputText","inputArray","command","undefined","commandPassThrough","parsedArgs","parse","type","help","needsInstance","commandWasRun","runCommandOnActive","printToActive","showHelp","option","showMsg","msg","clear","echo","description","init","defaultValue","darwin","startState","maximise","barShowing","tabsShowing","openWindow","closeWindow","minimiseWindow","unminimiseWindow","maximiseWindow","unmaximiseWindow","toggleShow","toggleMaximise","toggleMinimize","theme","barColor","outputColor","backgroundColor","Component","propTypes","TerminalPropTypes","defaultProps","TerminalDefaultProps","childContextTypes","TerminalContextTypes"],"mappings":"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","file":"index.js","sourcesContent":["/* eslint-disable no-console, react/sort-comp */\r\nimport React, { Component } from 'react';\r\nimport stringSimilarity from 'string-similarity';\r\nimport whatkey from 'whatkey';\r\nimport isEqual from 'lodash.isequal';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { handleLogging } from '../../utils';\r\nimport {\r\n  TerminalPropTypes,\r\n  TerminalContextTypes,\r\n  TerminalDefaultProps,\r\n} from '../types';\r\n\r\nimport { os, pluginMap, uuidv4, getShortcuts, modCommands } from './terminal-utils';\r\nimport { Base, ContainerWrapper, Note } from './styled-elements';\r\n\r\nimport Bar from '../Bar';\r\nimport Content from '../Content/index';\r\nimport Tabs from '../Tabs/index';\r\n\r\nfunction compLogic(comp) {\r\n  switch (comp) {\r\n    case '>':\r\n      return (a, b) => parseInt(a, 10) > parseInt(b, 10);\r\n    case '<':\r\n      return (a, b) => parseInt(a, 10) < parseInt(b, 10);\r\n    case '>=':\r\n      return (a, b) => parseInt(a, 10) >= parseInt(b, 10);\r\n    case '<=':\r\n      return (a, b) => parseInt(a, 10) <= parseInt(b, 10);\r\n    case '!=':\r\n      return (a, b) => a !== b;\r\n    case '=':\r\n    default:\r\n      return (a, b) => a === b;\r\n  }\r\n}\r\n\r\nfunction putCursorAtEnd(el) {\r\n  // Only focus if input isn't already\r\n  if (document.activeElement !== el) {\r\n    el.focus();\r\n  }\r\n\r\n  // If this function exists... (IE 9+)\r\n  if (el.setSelectionRange) {\r\n    // Double the length because Opera is inconsistent about whether a carriage\r\n    // return is one character or two.\r\n    const len = el.value.length * 2;\r\n\r\n    // Timeout seems to be required for Blink\r\n    setTimeout(() => {\r\n      el.setSelectionRange(len, len);\r\n    }, 1);\r\n  } else {\r\n    // As a fallback, replace the contents with itself\r\n    // Doesn't work in Chrome, but Chrome supports setSelectionRange\r\n    el.value = el.value;\r\n  }\r\n}\r\n\r\nclass Terminal extends Component {\r\n  static displayName = 'Terminal';\r\n\r\n  static version = '4.3.0';\r\n\r\n  static propTypes = TerminalPropTypes;\r\n\r\n  static defaultProps = TerminalDefaultProps;\r\n\r\n  static childContextTypes = TerminalContextTypes;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.pluginData = {};\r\n\r\n    this.defaultCommands = {\r\n      // eslint-disable-line react/sort-comp\r\n      show: this.showMsg,\r\n      clear: {\r\n        method: this.clearScreen,\r\n        needsInstance: true,\r\n      },\r\n      help: {\r\n        method: this.showHelp,\r\n        needsInstance: true,\r\n      },\r\n      echo: input => input.slice(1).join(' '),\r\n      'edit-line': {\r\n        method: this.editLine,\r\n        needsInstance: true,\r\n        options: [\r\n          {\r\n            name: 'line',\r\n            description: 'the line you want to edit. -1 is the last line',\r\n            init: value => parseInt(value, 10),\r\n            defaultValue: -1,\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    this.defaultDesciptions = {\r\n      show: (props.msg && props.msg.length > 0) ? 'show the msg' : false,\r\n      clear: 'clear the screen',\r\n      help: 'list all the commands',\r\n      echo: false,\r\n      'edit-line': false,\r\n    };\r\n\r\n    this.defaultShortcuts = {\r\n      'win, linux, darwin': {\r\n        'alt + t': this.createTab,\r\n      },\r\n      'win, linux': {\r\n        'ctrl + l': 'clear',\r\n      },\r\n      darwin: {\r\n        'cmd + k': 'clear',\r\n      },\r\n    };\r\n\r\n    this.state = {\r\n      tabbed: false,\r\n      commands: {},\r\n      descriptions: {},\r\n      show: props.startState !== 'closed',\r\n      minimise: props.startState === 'minimised',\r\n      maximise: props.startState === 'maximised',\r\n      shortcuts: {},\r\n      activeTab: '',\r\n      tabs: [],\r\n      instances: [],\r\n    };\r\n  }\r\n\r\n  getChildContext() {\r\n    return {\r\n      instances: this.state.instances,\r\n      show: this.state.show,\r\n      minimise: this.state.minimise,\r\n      maximise: this.state.maximise,\r\n      activeTab: this.state.activeTab,\r\n      barShowing: !this.props.hideTopBar,\r\n      tabsShowing: this.props.allowTabs,\r\n      openWindow: this.setTrue('show'),\r\n      closeWindow: this.setFalse('show'),\r\n      minimiseWindow: this.setTrue('minimise'),\r\n      unminimiseWindow: this.setFalse('minimise'),\r\n      maximiseWindow: this.setTrue('maximise'),\r\n      unmaximiseWindow: this.setFalse('maximise'),\r\n      toggleShow: this.toggleState('show'),\r\n      toggleMaximise: this.toggleState('maximise'),\r\n      toggleMinimize: this.toggleState('minimise'),\r\n    };\r\n  }\r\n\r\n  // Prepare the symbol\r\n  componentWillMount = () => {\r\n    this.loadPlugins();\r\n    this.assembleCommands();\r\n    this.setDescriptions();\r\n    this.setShortcuts();\r\n\r\n    this.createTab(true);\r\n  };\r\n\r\n  // Load everything!\r\n  componentDidMount = () => {\r\n    if (this.props.watchConsoleLogging) {\r\n      this.watchConsoleLogging();\r\n    }\r\n  };\r\n\r\n  // Tab creation\r\n  createTab = (force = false) => {\r\n    const { allowTabs, promptSymbol } = this.props;\r\n    if (force || allowTabs) {\r\n      const { tabs } = this.state;\r\n      const id = uuidv4();\r\n\r\n      tabs.push((\r\n        <Content\r\n          key={id}\r\n          id={id}\r\n          prompt={promptSymbol}\r\n          handleChange={this.handleChange}\r\n          handlerKeyPress={this.handlerKeyPress}\r\n          register={(...args) => this.registerInstance(id, ...args)}\r\n        />\r\n      ));\r\n\r\n      this.setState({ activeTab: id, tabs });\r\n    }\r\n  };\r\n\r\n  // Tab removal\r\n  removeTab = (index) => {\r\n    const { tabs } = this.state;\r\n    tabs.splice(index, 1);\r\n    this.setState({ tabs });\r\n  }\r\n\r\n  // Show the content on toggling\r\n  getAppContent = () => {\r\n    const { show, minimise } = this.state;\r\n    if (!show) {\r\n      return this.getNote();\r\n    }\r\n    if (minimise) {\r\n      return this.getBar();\r\n    }\r\n    return this.getContent();\r\n  };\r\n\r\n  // Shows the full window (normal window)\r\n  getContent = () => {\r\n    const {\r\n      color,\r\n      style,\r\n      showActions,\r\n      hideTopBar,\r\n      allowTabs,\r\n      actionHandlers,\r\n    } = this.props;\r\n    const { activeTab, tabs } = this.state;\r\n    const baseStyle = {\r\n      height: '100%',\r\n      color: color || 'green',\r\n      animation: 'fadeIn 0.18s ease-in',\r\n      fontFamily: \"'Inconsolata', monospace\",\r\n      fontSize: '0.9em',\r\n    };\r\n    // This should be a syled component but breaks if it is...\r\n    return (\r\n      <div style={{ ...baseStyle, ...style }}>\r\n        {!hideTopBar && (\r\n          <Bar showActions={showActions} {...actionHandlers} />\r\n        )}\r\n        {allowTabs && (\r\n          <Tabs\r\n            active={activeTab}\r\n            setActiveTab={this.setActiveTab}\r\n            createTab={this.createTab}\r\n            removeTab={this.removeTab}\r\n          />\r\n        )}\r\n        {tabs}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Show only bar (minimise)\r\n  getBar = () => {\r\n    const { style, showActions, actionHandlers } = this.props;\r\n\r\n    return (\r\n      <ContainerWrapper style={{ ...style }}>\r\n        <Bar\r\n          showActions={showActions}\r\n          {...actionHandlers}\r\n        />\r\n      </ContainerWrapper>\r\n    );\r\n  };\r\n\r\n  // Show msg (on window close)\r\n  getNote = () => (\r\n    <Note>\r\n      <h1>\r\n        {this.props.closedTitle}\r\n      </h1>\r\n      <img\r\n        src=\"https://camo.githubusercontent.com/95ad3fffa11193f85dedbf14ca67e4c5c07182d0/687474703a2f2f69636f6e732e69636f6e617263686976652e636f6d2f69636f6e732f70616f6d656469612f736d616c6c2d6e2d666c61742f313032342f7465726d696e616c2d69636f6e2e706e67\"\r\n        width=\"200\"\r\n        height=\"200\"\r\n        alt=\"note\"\r\n        onKeyPress={this.toggleState('show')}\r\n        onClick={this.toggleState('show')}\r\n      />\r\n      {this.props.closedMessage}\r\n    </Note>\r\n  );\r\n\r\n  // Plugin data getter\r\n  getPluginData = name => this.pluginData[name];\r\n\r\n  // Plugin data setter\r\n  setPluginData = (name, data) => { this.pluginData[name] = data; };\r\n\r\n  // Set descriptions of the commands\r\n  setDescriptions = () => {\r\n    let descriptions = {\r\n      ...this.defaultDesciptions,\r\n      ...this.props.descriptions,\r\n    };\r\n    pluginMap(this.props.plugins, (plugin) => {\r\n      if (plugin.descriptions) {\r\n        descriptions = {\r\n          ...descriptions,\r\n          ...plugin.descriptions,\r\n        };\r\n      }\r\n    });\r\n    this.setState({ descriptions });\r\n  };\r\n\r\n  // Set command shortcuts\r\n  setShortcuts = () => {\r\n    let shortcuts = getShortcuts({}, this.defaultShortcuts);\r\n    shortcuts = getShortcuts(shortcuts, this.props.shortcuts);\r\n    pluginMap(this.props.plugins, (plugin) => {\r\n      if (plugin.shortcuts) {\r\n        shortcuts = getShortcuts(shortcuts, plugin.shortcuts);\r\n      }\r\n    });\r\n    this.setState({ shortcuts });\r\n  };\r\n\r\n  // Setter to change the prefix of the input prompt\r\n  setPromptPrefix = (instance, promptPrefix) => {\r\n    if (instance.state.controller === null) {\r\n      instance.setState({ promptPrefix });\r\n    }\r\n  };\r\n\r\n  // Setter to change the symbol of the input prompt\r\n  setPromptSymbol = (instance, prompt) => {\r\n    if (instance.state.controller === null) {\r\n      instance.setState({ prompt });\r\n    }\r\n  };\r\n\r\n  // Set the currently active tab\r\n  setActiveTab = (activeTab) => {\r\n    this.setState({ activeTab });\r\n  };\r\n\r\n  // Hide window\r\n  setFalse = name => () => this.setState({ [name]: false });\r\n\r\n  // Show window\r\n  setTrue = name => () => this.setState({ [name]: true });\r\n\r\n  /**\r\n   * set the input value with the possible history value\r\n   * @param {number} next position on the history\r\n   */\r\n  setValueWithHistory = (instance, position, inputRef) => {\r\n    const { history } = instance.state;\r\n    if (history[position]) {\r\n      instance.setState({ historyCounter: position });\r\n      inputRef.value = history[position];\r\n      putCursorAtEnd(inputRef);\r\n    }\r\n  };\r\n\r\n  // Method to check if version meets criteria\r\n  checkVersion = (comp, ver) => {\r\n    if (ver === '*') {\r\n      return true;\r\n    }\r\n    if (!(/^(\\d|\\.)+$/.test(ver))) {\r\n      throw new Error('Version can only have numbers and periods');\r\n    } else {\r\n      let clean = ver.toLowerCase().replace(/x/g, '0');\r\n      if (clean[clean.length - 1] === '.') {\r\n        clean += '0';\r\n      }\r\n      const split = clean.split('.');\r\n      while (split.length < 3) {\r\n        split.push('0');\r\n      }\r\n      const realSplit = Terminal.version.split('.');\r\n      const checkBools = split.map((val, index) => compLogic(comp)(realSplit[index], val));\r\n      return checkBools.indexOf(false) < 0;\r\n    }\r\n  };\r\n\r\n  // Used to keep track of all instances\r\n  registerInstance = (index, instance) => {\r\n    const { instances } = this.state;\r\n    const pluginInstances = {};\r\n    const pluginMethods = {};\r\n\r\n    const old = instances.find(i => i.index === index);\r\n\r\n    pluginMap(this.props.plugins, (PluginClass, config) => {\r\n      try {\r\n        const api = {\r\n          printLine: this.printLine.bind(this, instance),\r\n          removeLine: this.removeLine.bind(this, instance),\r\n          runCommand: this.runCommand.bind(this, instance),\r\n          setCanScroll: this.setCanScroll.bind(this, instance),\r\n          setScrollPosition: this.setScrollPosition.bind(this, instance),\r\n          focusInput: this.focusInput.bind(this, instance),\r\n          setPromptPrefix: this.setPromptPrefix.bind(this, instance),\r\n          setPromptSymbol: this.setPromptSymbol.bind(this, instance),\r\n          getPluginMethod: this.getPluginMethod.bind(this, instance),\r\n          takeControl: this.pluginTakeControl.bind(this, instance),\r\n          releaseControl: this.pluginReleaseControl.bind(this, instance),\r\n          getData: () => this.getPluginData(PluginClass.displayName),\r\n          setData: data => this.setPluginData(PluginClass.displayName, data),\r\n          checkVersion: this.checkVersion.bind(this),\r\n          version: Terminal.version,\r\n          os,\r\n        };\r\n\r\n        let plugin;\r\n        if (old) {\r\n          old.pluginInstances[PluginClass.displayName].updateApi(api);\r\n        } else {\r\n          plugin = new PluginClass(api, config);\r\n          pluginMethods[PluginClass.displayName] = {\r\n            ...plugin.getPublicMethods(),\r\n            _getName: () => PluginClass.displayName,\r\n            _getVersion: () => PluginClass.version,\r\n          };\r\n        }\r\n\r\n        pluginInstances[PluginClass.displayName] = plugin;\r\n      } catch (e) {\r\n        console.error(`Error instantiating plugin ${PluginClass.displayName}`, e); // eslint-disable-line no-console\r\n      }\r\n    });\r\n\r\n    const data = {\r\n      index,\r\n      instance,\r\n      pluginMethods: old ? old.pluginMethods : pluginMethods,\r\n      pluginInstances: old ? old.pluginInstances : pluginInstances,\r\n    };\r\n\r\n    if (old) {\r\n      const realIndex = instances.indexOf(old);\r\n      instances[realIndex] = data;\r\n    } else {\r\n      instances.push(data);\r\n    }\r\n\r\n    this.setState({ instances });\r\n\r\n    return () => {\r\n      const insts = this.state.instances;\r\n      this.setState({\r\n        instances: insts.filter(i => !isEqual(i.instance, instance)),\r\n      });\r\n    };\r\n  }\r\n\r\n  // allows a plugin to take full control over instance\r\n  pluginTakeControl = (instance, controller, newPrompt, newPromptPrefix) => {\r\n    const { promptPrefix, prompt } = instance.state;\r\n    instance.setState({\r\n      controller,\r\n      prompt: typeof newPrompt === 'undefined' ? prompt : newPrompt,\r\n      promptPrefix: typeof newPromptPrefix === 'undefined' ? promptPrefix : newPromptPrefix,\r\n      oldPrefix: promptPrefix,\r\n      oldPrompt: prompt,\r\n    });\r\n  };\r\n\r\n  // allows a plugin to release full control over instance\r\n  pluginReleaseControl = (instance) => {\r\n    const { oldPrefix, oldPrompt } = instance.state;\r\n    instance.setState({ controller: null, promptPrefix: oldPrefix, prompt: oldPrompt });\r\n  };\r\n\r\n  // Toggle a state boolean\r\n  toggleState = name => () => this.setState({ [name]: !this.state[name] });\r\n\r\n  // Prepare the built-in commands\r\n  assembleCommands = () => {\r\n    let commands = {\r\n      ...this.defaultCommands,\r\n      ...this.props.commands,\r\n    };\r\n\r\n    pluginMap(this.props.plugins, (plugin) => {\r\n      if (plugin.commands) {\r\n        commands = {\r\n          ...commands,\r\n          ...plugin.commands,\r\n        };\r\n      }\r\n    });\r\n\r\n    this.setState({ commands: modCommands(commands) });\r\n  };\r\n\r\n  /**\r\n   * autocomplete with the command the have the best match\r\n   * @param {object} input reference\r\n   */\r\n  autocompleteValue = (inputRef) => {\r\n    const { descriptions } = this.state;\r\n    const keysToCheck = Object.keys(descriptions).filter(key => descriptions[key] !== false);\r\n    let ratings = [];\r\n    if (inputRef.value.length > 1) {\r\n      ratings = stringSimilarity.findBestMatch( // eslint-disable-line\r\n        inputRef.value,\r\n        keysToCheck,\r\n      ).ratings;\r\n    } else {\r\n      ratings = keysToCheck.reduce((full, item) => {\r\n        if (item.indexOf(inputRef.value) === 0) {\r\n          full.push({ target: item, rating: 1 });\r\n        }\r\n        return full;\r\n      }, []);\r\n    }\r\n    return ratings.filter(item => item.rating > 0);\r\n  };\r\n\r\n  // Refresh or clear the screen\r\n  clearScreen = (args, printLine, runCommand, instance) => {\r\n    instance.setState({ summary: [] });\r\n  };\r\n\r\n  // Method to check for shortcut and invoking commands\r\n  checkShortcuts = (instance, key, e) => {\r\n    const { controller } = instance.state;\r\n    let cuts = {};\r\n    if (controller !== null) {\r\n      if (controller.shortcuts) {\r\n        cuts = getShortcuts(cuts, controller.shortcuts);\r\n      }\r\n    } else {\r\n      const instanceData = this.state.instances.find(i => isEqual(i.instance, instance));\r\n      cuts = this.state.shortcuts;\r\n      if (instanceData) {\r\n        Object.values(instanceData.pluginInstances).forEach((i) => {\r\n          cuts = getShortcuts(cuts, i.shortcuts);\r\n        });\r\n      }\r\n    }\r\n\r\n    const shortcuts = Object.keys(cuts);\r\n    if (shortcuts.length > 0) {\r\n      const { keyInputs } = instance.state;\r\n      let modKey = key;\r\n      if (key === 'meta') {\r\n        // eslint-disable-next-line no-nested-ternary\r\n        modKey = os === 'darwin' ? 'cmd' : os === 'win' ? 'win' : 'meta';\r\n      }\r\n      keyInputs.push(modKey);\r\n      const len = keyInputs.length;\r\n\r\n      const options = shortcuts\r\n        .map((cut, i) => [cut.replace(/\\s/g, '').split('+'), i])\r\n        .filter(cut => cut[0].length >= keyInputs.length)\r\n        .filter(cut => isEqual(cut[0].slice(0, len), keyInputs));\r\n\r\n      if (options.length > 0) {\r\n        if (options.length === 1 && options[0][0].length === len) {\r\n          const shortcut = shortcuts[options[0][1]];\r\n          const action = cuts[shortcut];\r\n          if (typeof action === 'string') {\r\n            this.runCommand(instance, cuts[shortcut]);\r\n          } else if (typeof action === 'function') {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            action();\r\n          }\r\n          instance.setState({ keyInputs: [] });\r\n        }\r\n      } else if (keyInputs.length > 0) {\r\n        instance.setState({ keyInputs: [] });\r\n      }\r\n    }\r\n  };\r\n\r\n  // edit-line command\r\n  editLine = (args, printLine, runCommand, instance) => {\r\n    const { summary } = instance.state;\r\n    let index = args.line;\r\n    if (index < 0) {\r\n      index = summary.length === 0 ? 0 : summary.length - index;\r\n    }\r\n    summary[index] = args._.join(' ');\r\n    instance.setState({ summary });\r\n  };\r\n\r\n  // Listen for user input\r\n  handleChange = (instance, e) => {\r\n    const {\r\n      input, promptPrefix, prompt, history, controller,\r\n    } = instance.state;\r\n    const saveToHistory = controller !== null ? (controller.history || false) : true;\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      if (typeof e.dontShowCommand === 'undefined') {\r\n        this.printLine.bind(this, instance)(\r\n          `${promptPrefix}${prompt} ${e.target.value}`,\r\n          false,\r\n        );\r\n      }\r\n\r\n      input.push(e.target.value);\r\n      const res = this.runCommand(instance, `${input.join('\\n')}`);\r\n\r\n      if (typeof res !== 'undefined') {\r\n        this.printLine.bind(this, instance)(res);\r\n      }\r\n\r\n      const newHistory = [...history, e.target.value];\r\n      const historyProps = saveToHistory ? {\r\n        history: newHistory,\r\n        historyCounter: newHistory.length,\r\n      } : {};\r\n      instance.setState({\r\n        input: [],\r\n        ...historyProps,\r\n      });\r\n      e.target.value = ''; // eslint-disable-line no-param-reassign\r\n    } else if (e.key === 'Enter' && e.shiftKey) {\r\n      this.printLine.bind(this, instance)(\r\n        `${promptPrefix}${prompt} ${e.target.value}`,\r\n        false,\r\n      );\r\n      const newHistory = [...history, e.target.value];\r\n      const historyProps = saveToHistory ? {\r\n        history: newHistory,\r\n        historyCounter: newHistory.length,\r\n      } : {};\r\n      instance.setState({\r\n        input: [...input, e.target.value],\r\n        ...historyProps,\r\n      });\r\n      e.target.value = ''; // eslint-disable-line no-param-reassign\r\n    }\r\n    if (typeof this.props.afterChange === 'function') {\r\n      this.props.afterChange(e);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Base of key code set the value of the input\r\n   * with the history\r\n   * @param {event} event of input\r\n   */\r\n  handlerKeyPress = (instance, e, inputRef) => {\r\n    const { key } = whatkey(e);\r\n    const { historyCounter, keyInputs, controller } = instance.state;\r\n    if (keyInputs.length === 0 || keyInputs.length === 0) {\r\n      if (controller !== null) {\r\n        if (controller.onKeyPress) {\r\n          controller.onKeyPress(key);\r\n        }\r\n      } else {\r\n        switch (key) {\r\n          case 'up':\r\n            this.setValueWithHistory(instance, historyCounter - 1, inputRef);\r\n            if (this.state.tabbed) {\r\n              this.setState({ tabbed: false });\r\n            }\r\n            break;\r\n          case 'down':\r\n            this.setValueWithHistory(instance, historyCounter + 1, inputRef);\r\n            if (this.state.tabbed) {\r\n              this.setState({ tabbed: false });\r\n            }\r\n            break;\r\n          case 'tab':\r\n            e.preventDefault();\r\n            if (inputRef.value !== '' && this.state.tabbed === true) {\r\n              const contents = this.autocompleteValue(inputRef);\r\n              this.printLine(instance, `${instance.state.promptPrefix}${instance.state.prompt} ${inputRef.value}`, false);\r\n              this.printLine(\r\n                instance,\r\n                (\r\n                  <span>\r\n                    {contents.filter(item => typeof item !== 'undefined').map((item) => {\r\n                    const styles = {\r\n                      marginRight: 5,\r\n                      width: 'calc(33% - 5px)',\r\n                      display: 'inline-block',\r\n                    };\r\n                    if (contents.length > 3) {\r\n                      styles.marginBottom = 5;\r\n                    }\r\n                    return (\r\n                      <span\r\n                        style={styles}\r\n                        key={`${item.target}-${item.rating}`}\r\n                      >\r\n                        {item.target}\r\n                      </span>\r\n                    );\r\n                  })}\r\n                  </span>\r\n                ),\r\n                false,\r\n              );\r\n              this.setState({ tabbed: false });\r\n            } else {\r\n              this.setState({ tabbed: true });\r\n            }\r\n            break;\r\n          default:\r\n            if (this.state.tabbed) {\r\n              this.setState({ tabbed: false });\r\n            }\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    this.checkShortcuts(instance, key, e);\r\n  }\r\n\r\n  // Plugins\r\n  loadPlugins = () => {\r\n    const pluginData = {};\r\n    pluginMap(this.props.plugins, (plugin) => {\r\n      try {\r\n        pluginData[plugin.displayName] = plugin.defaultData;\r\n      } catch (e) {\r\n        console.error(`Error loading plugin ${plugin.displayName}`, e); // eslint-disable-line no-console\r\n      }\r\n    });\r\n    this.pluginData = pluginData;\r\n  };\r\n\r\n  // Plugin api method to get a public plugin method\r\n  getPluginMethod = (instance, name, method) => {\r\n    const instanceData = this.state.instances.find(i => isEqual(i.instance, instance));\r\n    if (instanceData) {\r\n      if (instanceData.pluginMethods[name]) {\r\n        if (instanceData.pluginMethods[name][method]) {\r\n          return instanceData.pluginMethods[name][method];\r\n        }\r\n        throw new Error(`No method with name ${method} has been registered for plugin ${name}`);\r\n      } else {\r\n        throw new Error(`No plugin with name ${name} has been registered`);\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // Set if the current tab can scroll\r\n  setCanScroll = (instance, force) => {\r\n    if (typeof force !== 'undefined') {\r\n      instance.setState({ canScroll: force });\r\n    }\r\n  }\r\n\r\n  // Set the scroll position of the contents\r\n  setScrollPosition = (instance, pos) => {\r\n    if (typeof pos === 'number') {\r\n      instance.setScrollPosition(pos);\r\n    }\r\n  }\r\n\r\n  // Set focus to the input\r\n  focusInput = (instance) => {\r\n    if (typeof pos === 'number') {\r\n      instance.focusInput();\r\n    }\r\n  }\r\n\r\n  // Print the summary (input -> output)\r\n  printLine = (instance, inp, std = true) => {\r\n    let print = true;\r\n    if (std) {\r\n      const instanceData = this.state.instances.find(i => isEqual(i.instance, instance));\r\n      if (instanceData) {\r\n        const plugins = instanceData.pluginInstances;\r\n        for (let i = 0; i < plugins.length; i += 1) {\r\n          try {\r\n            print = plugins[i].readStdOut(inp);\r\n          } catch (e) {\r\n            // Do nothing\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (print !== false) {\r\n      const { summary } = instance.state;\r\n      summary.push(inp);\r\n      instance.setState({ summary });\r\n    }\r\n  };\r\n\r\n  // Remove a line from the summary\r\n  removeLine = (instance, lineNumber = -1) => {\r\n    const { summary } = instance.state;\r\n    summary.splice(lineNumber, 1);\r\n    instance.setState({ summary });\r\n  }\r\n\r\n  // Execute the commands\r\n  runCommand = (instance, inputText, force = false) => {\r\n    const inputArray = inputText.split(' ');\r\n    const input = inputArray[0];\r\n    const args = inputArray; // Undefined for function call\r\n    const { controller } = instance.state;\r\n    let commands = {};\r\n    if (!force && controller !== null) {\r\n      if (controller.runCommand) {\r\n        return controller.runCommand(inputText);\r\n      } else if (controller.commands) {\r\n        commands = { ...modCommands(controller.commands) };\r\n      }\r\n    } else {\r\n      const instanceData = this.state.instances.find(i => isEqual(i.instance, instance));\r\n      commands = { ...this.state.commands };\r\n      if (instanceData) {\r\n        Object.values(instanceData.pluginInstances).forEach((i) => {\r\n          commands = {\r\n            ...commands,\r\n            ...modCommands(i.commands),\r\n          };\r\n        });\r\n      }\r\n    }\r\n\r\n    const command = commands[input];\r\n    let res;\r\n\r\n    if (input === '') {\r\n      // do nothing\r\n    } else if (command === undefined) {\r\n      if (typeof this.props.commandPassThrough === 'function') {\r\n        res = this.props.commandPassThrough(\r\n          inputArray,\r\n          this.printLine.bind(this, instance),\r\n          this.runCommand.bind(this, instance),\r\n        );\r\n      } else {\r\n        this.printLine.bind(this, instance)(`-bash:${input}: command not found`);\r\n      }\r\n    } else {\r\n      const parsedArgs = command.parse(args);\r\n      const type = typeof parsedArgs;\r\n      if (type !== 'object' || (type === 'object' && !parsedArgs.help)) {\r\n        res = command.method(\r\n          parsedArgs,\r\n          this.printLine.bind(this, instance),\r\n          this.runCommand.bind(this, instance),\r\n          command.needsInstance === true ? instance : undefined,\r\n        );\r\n      }\r\n    }\r\n    if (typeof this.props.commandWasRun === 'function') {\r\n      this.props.commandWasRun(\r\n        inputArray,\r\n        this.printLine.bind(this, instance),\r\n        this.runCommand.bind(this, instance),\r\n      );\r\n    }\r\n    return res;\r\n  };\r\n\r\n  // Run a command on the active instance\r\n  runCommandOnActive = (inputText, force = false) => {\r\n    const data = this.state.instances.find(i => i.index === this.state.activeTab);\r\n    if (data && data.instance !== null) {\r\n      this.runCommand(data.instance, inputText, force);\r\n    }\r\n  }\r\n\r\n  // Print to active instance\r\n  printToActive = (...args) => {\r\n    const data = this.state.instances.find(i => i.index === this.state.activeTab);\r\n    if (data && data.instance !== null && data.instance.state.controller === null) {\r\n      this.printLine(data.instance, ...args);\r\n    }\r\n  }\r\n\r\n  // Listen for console logging and pass the input to handler (handleLogging)\r\n  watchConsoleLogging = () => {\r\n    handleLogging('log', this.printToActive);\r\n    handleLogging('info', this.printToActive);\r\n    handleLogging('error', this.printToActive);\r\n    handleLogging('warn', this.printToActive);\r\n    \r\n  };\r\n\r\n  // List all the commands (state + user defined)\r\n  showHelp = (args, printLine, runCommand, instance) => {\r\n    let commands = { ...this.state.commands };\r\n    let descriptions = { ...this.state.descriptions };\r\n    const instanceData = this.state.instances.find(i => isEqual(i.instance, instance));\r\n    if (instanceData) {\r\n      Object.values(instanceData.pluginInstances).forEach((i) => {\r\n        commands = {\r\n          ...commands,\r\n          ...i.commands,\r\n        };\r\n        descriptions = {\r\n          ...descriptions,\r\n          ...i.descriptions,\r\n        };\r\n      });\r\n    }\r\n    const options = Object.keys(commands);\r\n\r\n    for (const option of options) {\r\n      // eslint-disable-line no-restricted-syntax\r\n      if (descriptions[option] !== false) {\r\n        printLine(`${option} - ${descriptions[option]}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Show the msg (prop msg)\r\n  showMsg = (args, printLine) => {\r\n    if (this.props.msg && this.props.msg.length > 0) {\r\n      printLine(this.props.msg);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const theme = {\r\n      color: this.props.color,\r\n      prompt: this.props.prompt,\r\n      barColor: this.props.barColor,\r\n      outputColor: this.props.outputColor,\r\n      backgroundColor: this.props.backgroundColor,\r\n    };\r\n\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <Base\r\n          className=\"terminal-base\"\r\n          fullscreen={this.state.maximise}\r\n        >\r\n          {this.getAppContent()}\r\n        </Base>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Terminal;\r\n"]}